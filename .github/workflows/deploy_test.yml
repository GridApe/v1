name: Deploy to Contabo VPS
on:
  push:
    branches: ["Collins"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          check-latest: true
          cache: "npm"

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H vmi2322505.contaboserver.net >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "SSH key and known hosts set up successfully."
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@213.199.61.72 "echo 'SSH Connection Successful'"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: 213.199.61.72
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          debug: true
          script: |
            echo "Starting deployment..."

            # Set up working directory with proper permissions
            WORK_DIR="/home/${{ secrets.SERVER_USER }}/public_html"
            if [ ! -d "$WORK_DIR" ]; then
                mkdir -p "$WORK_DIR"
            fi
            cd "$WORK_DIR"

            # Set up temporary directory with proper permissions
            TEMP_DIR="/home/${{ secrets.SERVER_USER }}/temp_build"
            rm -rf "$TEMP_DIR"
            mkdir -p "$TEMP_DIR"
            
            # Configure npm to use the temporary directory
            export npm_config_cache="$TEMP_DIR/.npm"
            export TMPDIR="$TEMP_DIR"

            # Clean up old installation
            rm -rf node_modules .next package-lock.json

            # Clone/update repository
            if [ ! -d ".git" ]; then
                git clone https://x-access-token:${{ secrets.SECRET_PAT }}@github.com/gridape/v1.git .
            else
                git fetch origin main
                git reset --hard origin/main
            fi

            # Set up Node.js environment
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            # Install Node.js 20
            nvm install 20
            nvm use 20
            
            # Update npm
            npm install -g npm@latest
            
            # Verify versions
            echo "Node.js version: $(node -v)"
            echo "NPM version: $(npm -v)"

            # Set proper ownership and permissions
            chown -R $USER:$USER .
            chmod -R 755 .

            # Install dependencies with increased memory and timeout
            export NODE_OPTIONS="--max-old-space-size=4096"
            npm config set timeout 600000
            
            echo "Installing dependencies..."
            for i in {1..3}; do
              echo "Attempt $i of 3"
              if npm install --prefer-offline --no-audit --no-fund; then
                break
              fi
              echo "Retrying in 5 seconds..."
              sleep 5
              # Clean up between attempts
              rm -rf node_modules package-lock.json
            done

            # Build the application
            echo "Building application..."
            NODE_ENV=production npx next build || {
              echo "Build failed"
              exit 1
            }

            # PM2 process management
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2@latest
            fi

            if pm2 list | grep -q "dashboard"; then
              pm2 restart dashboard --update-env
            else
              NODE_ENV=production pm2 start npm --name "dashboard" -- start
            fi

            # Clean up
            rm -rf "$TEMP_DIR"
            npm cache clean --force

            echo "Deployment completed successfully."
